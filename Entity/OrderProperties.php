<?php
/**
 * Created by PhpStorm.
 * User: aztec
 * Date: 08.03.15
 * Time: 17:35
 */

namespace Htc\NowTaxiBundle\Entity;

/**
 * Параметры заказа
 *
 * Class OrderProperties
 * @package Htc\NowTaxiBundle\Entity
 */
class OrderProperties
{
    /**
     * Тариф
     *
     * @var integer
     */
    public $tariff;

    /**
     * Категория тарифов (можно передавать ЛИБО tariff, ЛИБО category.
     * Если требуется передать несколько вариантов, то можно передавать их в виде массива).
     * Если передается category это делегирует серверу по API выбрать тариф самостоятельно.
     * Таким образом можно будет делать заказы в других регионах.
     *
     * @var array
     */
    public $category;

    /**
     * Коментарий посредника, отправляющего заказ
     *
     * @var string
     */
    public $comment;

    /**
     * Стоимость подачи (0 - бесплатно; если отсутствует, то из тарифа)
     *
     * @var integer
     */
    public $minprice;

    /**
     * Сколько времени включено в стоимость подачи (если отсутствует, то из тарифа)
     *
     * @var integer
     */
    public $inctime;

    /**
     * Сколько км включено в стоимость подачи (если отсутствует, то из тарифа)
     *
     * @var integer
     */
    public $incdist;

    /**
     * Стоимость минуты (или интервала timecost_unit) (если отсутствует то из тарифа)
     *
     * @var integer
     */
    public $timecost;

    /**
     * Стоимость километра (если отсутствует то из тарифа)
     *
     * @var integer
     */
    public $distcost;

    /**
     * Флаг о том, что поездка будет оценена как поездка с фиксированной стоимостью.
     * В случае, если этот флаг установлен, то уточнение incdist игнорируется,
     * уточнение inctime определяет overtime (время выше которого таки начнет считать таксометр,
     * по умолчанию - 120 минут), minprice определяет стоимость поездки, другие параметры как обычно.
     *
     * @var integer
     */
    public $transfer;

    /**
     * Алгоритм соединения цены по расстоянию и цены по времени.
     * max - берется максимум из цен. sum или and - берется сумма.
     *
     * @var string
     */
    public $algorithm;

    /**
     * Дистанция к которой приводится стоимость по расстоянию (например 400 руб за 20 км)
     *
     * @var integer
     */
    public $distcostUnit;

    /**
     * Интервал к которому приводится стоимость по времени (например 300 руб за 15 минут)
     *
     * @var integer
     */
    public $timecostUnit;

    /**
     * Пороговая скорость
     *
     * @var integer
     */
    public $speed;

    /**
     * Наценка (положительная) или скидка (отрицательная) за движение со скоростью выше speed
     *
     * @var integer
     */
    public $speedTimeMarkup;

    /**
     * Количество бесплатного времени ожидания (минут)
     *
     * @var integer
     */
    public $timeFree;

    /**
     * Стоимость минуты в платном ожидании
     *
     * @var integer
     */
    public $timeCostWait;
}
